@using Core.Models
@model WebSite.ViewModels.PublicationViewModel

<h1>@Model.Title</h1>

<div class="date">
    @Model.DateTime.ToString("MMMM dd, yyyy")
</div>
<div class="views" title="Views count">
    <i class="glyphicon glyphicon-stats"></i>&nbsp;@Model.ViewsCount
</div>

<div class="clear"></div>

@if (string.IsNullOrEmpty(Model.EmbededPlayerCode))
{
    <div class="image-block inner">
        @if (string.IsNullOrEmpty(Model.Image))
        {
            <img class="img-responsive" alt="@Model.Title" src="@Core.Settings.Current.DefaultPublicationImage" />
        }
        else
        {
            <img class="img-responsive" alt="@Model.Title" src="@Model.Image" />
        }
    </div>
}

@if (!string.IsNullOrEmpty(Model.EmbededPlayerCode))
{
    <div class="row">
        <div class="col-md-12 video">
            @await Html.PartialAsync("_EmbededPlayer", Model.EmbededPlayerCode)
        </div>
    </div>
}

<div class="row">
    <article class="col-md-12">
        @if (string.IsNullOrEmpty(@Model.Content))
        {
            @Model.Description
        }
        else
        {
            @Html.Raw(@Model.Content)
        }
    </article>
</div>

<div class="row share">
    <div class="col-md-6">
        @await Html.PartialAsync("_SocialButtons", new Link(Model.Title, Model.ShareUrl))
    </div>
    <div class="col-md-6 text-right">
        @if (Model.Url != null)
        {
            <a class="btn btn-default" target="blank" href="@Model.Url">Original publication&nbsp;<i class="glyphicon glyphicon-log-in"></i></a>
        }
    </div>
</div>

@await Html.PartialAsync("_PostStructuredData", Model)

@await Html.PartialAsync("_CommentModule", Model.ShareUrl)

